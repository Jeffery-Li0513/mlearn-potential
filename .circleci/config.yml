version: 2
jobs:
  lint:
    working_directory: ~/mlearn
    docker:
      - image: materialsvirtuallab/circle-ci-pmg-py3:3.7.3
    steps:
      - checkout
      - run:
          command: |
            pip install --quiet pycodestyle flake8 mypy pydocstyle pylint
            echo "Checks will be performed in the order of pycodestyle -> flake8 -> mypy -> pydocstyle "
            echo "pycodestyle checks..."
            pycodestyle mlearn
            echo "--- Done ---"
            echo "flake8 checks..."
            flake8 --count --show-source --statistics mlearn
            # exit-zero treats all errors as warnings.
            flake8 --count --exit-zero --max-complexity=20 --statistics mlearn
            echo "--- Done ---"
            echo "mypy checks..."
            mypy mlearn
            echo "--- Done ---"
            pydocstyle --count mlearn
            echo "--- Done ---"
            echo "pylint checks..."
            pylint --exit-zero mlearn
            echo "--- Done ---"
  py3test:
    working_directory: ~/mlearn
    docker:
      - image: materialsvirtuallab/circle-ci-pmg-py3:0.0.2
    steps:
      - checkout
      - run:
          command: |
            export PATH=$HOME/miniconda3/bin:$PATH
            if [ ! -d "/root/miniconda3/envs/test_env" ]; then conda create --quiet --yes --name test_env python=3.6; fi
            source activate test_env
            conda install --quiet --yes numpy scipy matplotlib sympy cython
            conda upgrade --quiet --all
            pip install numpy --upgrade
            pip install --quiet --ignore-installed -r requirements.txt -r requirements-ci.txt
      - run:
          command: |
            export PATH=$HOME/miniconda3/bin:$PATH
            export MPLBACKEND=Agg
            source activate test_env
            pip install --quiet -e .
            mkdir coverage_reports
            pytest --cov=mlearn --cov-report html:coverage_reports mlearn
            coveralls
          no_output_timeout: 3600
      - store_artifacts:
          path: coverage_reports/
          destination: tr1
      - store_test_results:
          path: coverage_reports/

workflows:
  version: 2
  build_and_test:
    jobs:
      - py3test
      - lint
